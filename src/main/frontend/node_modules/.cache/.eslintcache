[{"/Users/jeongseho/Documents/spring-react2/src/main/frontend/src/index.js":"1","/Users/jeongseho/Documents/spring-react2/src/main/frontend/src/App.js":"2","/Users/jeongseho/Documents/spring-react2/src/main/frontend/src/reportWebVitals.js":"3","/Users/jeongseho/Documents/spring-react2/src/main/frontend/src/component/login/Login.jsx":"4","/Users/jeongseho/Documents/spring-react2/src/main/frontend/src/component/redux/Store.js":"5","/Users/jeongseho/Documents/spring-react2/src/main/frontend/src/component/login/TokenSlice.js":"6","/Users/jeongseho/Documents/spring-react2/src/main/frontend/src/component/join/Join.jsx":"7","/Users/jeongseho/Documents/spring-react2/src/main/frontend/src/component/main/Main.jsx":"8","/Users/jeongseho/Documents/spring-react2/src/main/frontend/src/component/main/list/List.jsx":"9","/Users/jeongseho/Documents/spring-react2/src/main/frontend/src/component/main/list/ListFragment.jsx":"10"},{"size":623,"mtime":1685610990034,"results":"11","hashOfConfig":"12"},{"size":1100,"mtime":1685795460874,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1683893850976,"results":"14","hashOfConfig":"12"},{"size":3948,"mtime":1685793302095,"results":"15","hashOfConfig":"12"},{"size":184,"mtime":1685509833951,"results":"16","hashOfConfig":"12"},{"size":347,"mtime":1685509768014,"results":"17","hashOfConfig":"12"},{"size":3951,"mtime":1685710879088,"results":"18","hashOfConfig":"12"},{"size":13745,"mtime":1685795429663,"results":"19","hashOfConfig":"12"},{"size":9222,"mtime":1685795991659,"results":"20","hashOfConfig":"12"},{"size":1379,"mtime":1685796089956,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},"1ku1off",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jeongseho/Documents/spring-react2/src/main/frontend/src/index.js",["55","56"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter as Route, Router} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Login from \"./component/login/Login\";\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n\n    <App/>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",[],"/Users/jeongseho/Documents/spring-react2/src/main/frontend/src/App.js",["57","58","59"],[],"/Users/jeongseho/Documents/spring-react2/src/main/frontend/src/reportWebVitals.js",[],[],"/Users/jeongseho/Documents/spring-react2/src/main/frontend/src/component/login/Login.jsx",["60","61","62"],[],"import React, {useState} from 'react';\nimport \"./login.css\";\nimport axios from \"axios\";\nimport {useDispatch, connect, useSelector} from \"react-redux\";\nimport { setToken } from \"./TokenSlice\";\nimport Modal from \"react-bootstrap/Modal\";\n\nconst Login = (props) => {\n\n    const formData = new FormData();\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const token = useSelector((state) => state.token.value);\n    const dispatch = useDispatch();\n    const [modalShow, setModalShow] = useState(false);\n    const [modalContent, setModalContent] = useState(\"\");\n\n    const onEmailChange = (e) => {\n        setEmail(e.target.value);\n    }\n    const onPasswordChange = (e) => {\n        setPassword(e.target.value);\n    }\n\n    const onSubmit = async (e) => {\n        formData.append(\"email\", email);\n        formData.append(\"password\", password);\n        e.preventDefault();\n        await axios({\n            method: \"POST\",\n            url: `/login`,\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            data: formData,\n            withCredentials:true,\n        }).then(response => {\n            const status = response.data.responseStatus;\n            console.log(response);\n            if (status === \"LOGIN_FAIL\") {\n                setModalContent(\"존재하지 않는 회원입니다.\");\n                setModalShow(true);\n            }\n            if (status === \"LOGIN_SUCCESS\"){\n                setModalContent(\"로그인 성공\");\n                setModalShow(true);\n                dispatch(setToken(response.data));\n                localStorage.setItem(\"token\", response.data);\n                console.log(localStorage.getItem(\"token\"));\n                window.location.href = \"/main\";\n            }\n        })\n    };\n\n    return (\n        <div className=\"Auth-form-container\">\n\n            <Modal\n                size=\"sm\"\n                show={modalShow}\n                onHide={() => setModalShow(false)}\n                aria-labelledby=\"example-modal-sizes-title-sm\"\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title id=\"example-modal-sizes-title-sm\">\n                        알림\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>{modalContent}</Modal.Body>\n            </Modal>\n\n            <form className=\"Auth-form\" onSubmit={onSubmit}>\n                <div className=\"Auth-form-content\">\n                    <h3 className=\"Auth-form-title\">Sign In</h3>\n                    <div className=\"form-group mt-3\">\n                        <label>Email address</label>\n                        <input\n                            type=\"email\"\n                            className=\"form-control mt-1\"\n                            placeholder=\"Enter email\"\n                            onChange={onEmailChange}\n                        />\n                    </div>\n                    <div className=\"form-group mt-3\">\n                        <label>Password</label>\n                        <input\n                            type=\"password\"\n                            className=\"form-control mt-1\"\n                            placeholder=\"Enter password\"\n                            onChange={onPasswordChange}\n                        />\n                    </div>\n                    <div className=\"d-grid gap-2 mt-3\">\n                        <button type=\"submit\" className=\"btn btn-primary\">\n                            Submit\n                        </button>\n                    </div>\n                    <p className=\"join text-right mt-2\">\n                        <a href=\"/join\">Join</a>\n                    </p>\n                    <p className=\"forgot-password text-right mt-2\">\n                        Forgot <a href=\"#\">password?</a>\n                    </p>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default Login;","/Users/jeongseho/Documents/spring-react2/src/main/frontend/src/component/redux/Store.js",[],[],"/Users/jeongseho/Documents/spring-react2/src/main/frontend/src/component/login/TokenSlice.js",[],[],"/Users/jeongseho/Documents/spring-react2/src/main/frontend/src/component/join/Join.jsx",[],[],"/Users/jeongseho/Documents/spring-react2/src/main/frontend/src/component/main/Main.jsx",["63","64"],[],"/Users/jeongseho/Documents/spring-react2/src/main/frontend/src/component/main/list/List.jsx",[],[],"/Users/jeongseho/Documents/spring-react2/src/main/frontend/src/component/main/list/ListFragment.jsx",[],[],{"ruleId":"65","severity":1,"message":"66","line":5,"column":26,"nodeType":"67","messageId":"68","endLine":5,"endColumn":31},{"ruleId":"65","severity":1,"message":"69","line":5,"column":33,"nodeType":"67","messageId":"68","endLine":5,"endColumn":39},{"ruleId":"65","severity":1,"message":"70","line":3,"column":8,"nodeType":"67","messageId":"68","endLine":3,"endColumn":12},{"ruleId":"65","severity":1,"message":"71","line":16,"column":18,"nodeType":"67","messageId":"68","endLine":16,"endColumn":25},{"ruleId":"65","severity":1,"message":"72","line":17,"column":11,"nodeType":"67","messageId":"68","endLine":17,"endColumn":24},{"ruleId":"65","severity":1,"message":"73","line":4,"column":22,"nodeType":"67","messageId":"68","endLine":4,"endColumn":29},{"ruleId":"65","severity":1,"message":"74","line":13,"column":11,"nodeType":"67","messageId":"68","endLine":13,"endColumn":16},{"ruleId":"75","severity":1,"message":"76","line":102,"column":32,"nodeType":"77","endLine":102,"endColumn":44},{"ruleId":"65","severity":1,"message":"78","line":9,"column":5,"nodeType":"67","messageId":"68","endLine":9,"endColumn":18},{"ruleId":"65","severity":1,"message":"79","line":10,"column":5,"nodeType":"67","messageId":"68","endLine":10,"endColumn":18},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Main' is defined but never used.","'setUser' is assigned a value but never used.","'authenticated' is assigned a value but never used.","'connect' is defined but never used.","'token' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'MDBTypography' is defined but never used.","'MDBInputGroup' is defined but never used."]