{"ast":null,"code":"var _jsxFileName = \"/Users/jeongseho/Documents/spring-react2/src/main/frontend/src/component/main/list/MemberList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Form, ListGroup } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MemberList = props => {\n  _s();\n  const [members, setMembers] = useState([]);\n  const [selectedMembers, setSelectedMembers] = useState([]);\n  const token = localStorage.getItem(\"token\");\n  const loadMembers = async () => {\n    await axios({\n      method: \"POST\",\n      url: \"/load/members\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      data: localStorage.getItem(\"token\"),\n      withCredentials: true\n    }).then(response => {\n      setMembers(response.data);\n    }).catch(() => {\n      console.log(localStorage.getItem(\"token\"));\n    });\n  };\n  const createRoom = async e => {\n    e.preventDefault();\n    await axios({\n      method: \"POST\",\n      url: \"/authenticate\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      data: token,\n      withCredentials: true\n    }).then(async () => {\n      await axios({\n        method: \"POST\",\n        url: \"/chat/create\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        data: selectedMembers,\n        withCredentials: true\n      }).then(response => {\n        console.log(response);\n        props.setRefresh(true);\n      }).catch(() => {\n        alert(\"error: create\");\n      });\n    }).catch(() => {\n      alert(\"auth error: memberlist\");\n    });\n  };\n  const onChange = e => {\n    e.target.checked ? setSelectedMembers([...selectedMembers, e.target.value]) : setSelectedMembers(selectedMembers.filter(m => m !== e.target.value));\n  };\n  useEffect(() => {\n    loadMembers().then();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"member_list\",\n    children: /*#__PURE__*/_jsxDEV(ListGroup, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: createRoom,\n        children: [members.map((member, idx) => {\n          return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n              \"aria-label\": \"option 1\",\n              className: \"me-2 d-inline\",\n              value: member.id,\n              onClick: onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this), member.nickname]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n_s(MemberList, \"lM5QcynmOoMDQfvo3/Cin6ZKX50=\");\n_c = MemberList;\nexport default MemberList;\nvar _c;\n$RefreshReg$(_c, \"MemberList\");","map":{"version":3,"names":["React","useEffect","useState","Button","Form","ListGroup","axios","jsxDEV","_jsxDEV","MemberList","props","_s","members","setMembers","selectedMembers","setSelectedMembers","token","localStorage","getItem","loadMembers","method","url","headers","data","withCredentials","then","response","catch","console","log","createRoom","e","preventDefault","setRefresh","alert","onChange","target","checked","value","filter","m","className","children","onSubmit","map","member","idx","Item","Check","id","onClick","fileName","_jsxFileName","lineNumber","columnNumber","nickname","type","variant","_c","$RefreshReg$"],"sources":["/Users/jeongseho/Documents/spring-react2/src/main/frontend/src/component/main/list/MemberList.jsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {Button, Form, ListGroup} from \"react-bootstrap\";\nimport axios from \"axios\";\n\n\nconst MemberList = (props) => {\n\n    const [members, setMembers] = useState([])\n    const [selectedMembers, setSelectedMembers] = useState([])\n\n    const token = localStorage.getItem(\"token\")\n\n    const loadMembers = async () => {\n        await axios({\n            method: \"POST\",\n            url: \"/load/members\",\n            headers: {\n                \"Content-Type\" : \"application/json\",\n            },\n            data: localStorage.getItem(\"token\"),\n            withCredentials: true,\n        }).then(response => {\n            setMembers(response.data);\n        }).catch(()=> {\n            console.log(localStorage.getItem(\"token\"))\n        })\n    }\n\n    const createRoom = async (e) => {\n        e.preventDefault();\n\n        await axios({\n            method: \"POST\",\n            url: \"/authenticate\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            data: token,\n            withCredentials: true,\n        }).then(async () => {\n            await axios({\n                method: \"POST\",\n                url: \"/chat/create\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                data: selectedMembers,\n                withCredentials: true,\n            }).then(response => {\n                console.log(response);\n                props.setRefresh(true);\n            }).catch(() => {\n                alert(\"error: create\")\n            })\n\n        }).catch(()=>{\n            alert(\"auth error: memberlist\");\n        })\n\n\n    }\n\n    const onChange = (e) => {\n        e.target.checked ? setSelectedMembers([...selectedMembers, e.target.value])\n            :setSelectedMembers(selectedMembers.filter(m => m !== e.target.value))\n    }\n\n    useEffect(() => {\n        loadMembers().then();\n    }, [])\n    return (\n        <div className=\"member_list\">\n            <ListGroup>\n                <Form onSubmit={createRoom}>\n                {\n                    members.map((member, idx) => {\n                        return (\n                        <ListGroup.Item key={idx}>\n                            <Form.Check aria-label=\"option 1\" className=\"me-2 d-inline\" value={member.id} onClick={onChange}/>\n                            {member.nickname}\n                        </ListGroup.Item>)\n                    })\n                }\n                    <Button type=\"submit\" variant=\"primary\" >Create</Button>{' '}\n                </Form>\n            </ListGroup>\n        </div>\n    )\n}\n\nexport default MemberList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}