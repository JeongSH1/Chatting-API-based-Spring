[{"/Users/jeongseho/Documents/spring-react2/src/main/frontend/src/index.js":"1","/Users/jeongseho/Documents/spring-react2/src/main/frontend/src/App.js":"2","/Users/jeongseho/Documents/spring-react2/src/main/frontend/src/reportWebVitals.js":"3","/Users/jeongseho/Documents/spring-react2/src/main/frontend/src/component/login/Login.jsx":"4","/Users/jeongseho/Documents/spring-react2/src/main/frontend/src/component/redux/Store.js":"5","/Users/jeongseho/Documents/spring-react2/src/main/frontend/src/component/login/TokenSlice.js":"6","/Users/jeongseho/Documents/spring-react2/src/main/frontend/src/component/join/Join.jsx":"7","/Users/jeongseho/Documents/spring-react2/src/main/frontend/src/component/main/Main.jsx":"8","/Users/jeongseho/Documents/spring-react2/src/main/frontend/src/component/main/list/List.jsx":"9","/Users/jeongseho/Documents/spring-react2/src/main/frontend/src/component/main/list/ListFragment.jsx":"10","/Users/jeongseho/Documents/spring-react2/src/main/frontend/src/component/main/list/MemberList.jsx":"11"},{"size":686,"mtime":1686473432630,"results":"12","hashOfConfig":"13"},{"size":1914,"mtime":1686474208440,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1683893850976,"results":"15","hashOfConfig":"13"},{"size":3848,"mtime":1686388429743,"results":"16","hashOfConfig":"13"},{"size":184,"mtime":1685509833951,"results":"17","hashOfConfig":"13"},{"size":347,"mtime":1685509768014,"results":"18","hashOfConfig":"13"},{"size":3985,"mtime":1685873271799,"results":"19","hashOfConfig":"13"},{"size":13746,"mtime":1686469270528,"results":"20","hashOfConfig":"13"},{"size":10847,"mtime":1686547385204,"results":"21","hashOfConfig":"13"},{"size":1379,"mtime":1685796089956,"results":"22","hashOfConfig":"13"},{"size":2135,"mtime":1686554002869,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1ku1off",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jeongseho/Documents/spring-react2/src/main/frontend/src/index.js",["61","62","63"],[],"/Users/jeongseho/Documents/spring-react2/src/main/frontend/src/App.js",["64","65","66","67","68","69","70"],[],"import React, {useEffect, useState} from \"react\";\nimport {BrowserRouter, createBrowserRouter, redirect, Route, Routes, useNavigate,} from \"react-router-dom\";\nimport Main from \"./component/main/Main\";\nimport Login from \"./component/login/Login\";\nimport { Provider } from \"react-redux\";\nimport store from \"./component/redux/Store\";\nimport Join from \"./component/join/Join\";\nimport List from \"./component/main/list/List\";\nimport axios from \"axios\";\nimport {createBrowserHistory} from \"history\";\n\nfunction NotFound() {\n    return null;\n}\nfunction App() {\n    const [authenticated, setAuthenticated] = useState(false);\n    const navigate = useNavigate();\n    const authenticate = async () => {\n\n        await axios({\n            method: \"POST\",\n            url: \"/authenticate\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            data: localStorage.getItem(\"token\"),\n            withCredentials: true,\n        }).then(response => {\n            const status = response.data.responseStatus;\n            return status === \"AUTHENTICATED\";\n        });\n    }\n    useEffect(() => {\n        authenticate()\n    }, []);\n\n    useEffect(() => {\n        console.log(authenticated);\n        if ((!authenticated) && window.location.pathname === \"/\")\n            navigate(\"/login\")\n        if ((!authenticated) && window.location.pathname === \"/\" )\n            navigate(\"/login\");\n    }, [authenticated]);\n\n    return (\n        <div className=\"App\">\n            <Provider store={store}>\n                <Routes>\n                    <Route path=\"/main/*\" element={<List/>}></Route>\n                    <Route path=\"/join/*\" element={<Join/>}></Route>\n                    <Route path=\"/login/*\" element={<Login/>}></Route>\n                    <Route path=\"*\" element={<NotFound />}></Route>\n                </Routes>\n            </Provider>\n        </div>\n    );\n}\n\nexport default App;",[],"/Users/jeongseho/Documents/spring-react2/src/main/frontend/src/reportWebVitals.js",[],[],[],"/Users/jeongseho/Documents/spring-react2/src/main/frontend/src/component/login/Login.jsx",["71","72","73"],[],"import React, {useState} from 'react';\nimport \"./login.css\";\nimport axios from \"axios\";\nimport {useDispatch, connect, useSelector} from \"react-redux\";\nimport { setToken } from \"./TokenSlice\";\nimport Modal from \"react-bootstrap/Modal\";\n\nconst Login = (props) => {\n\n    const formData = new FormData();\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const dispatch = useDispatch();\n    const [modalShow, setModalShow] = useState(false);\n    const [modalContent, setModalContent] = useState(\"\");\n\n    const onEmailChange = (e) => {\n        setEmail(e.target.value);\n    }\n    const onPasswordChange = (e) => {\n        setPassword(e.target.value);\n    }\n\n    const onSubmit = async (e) => {\n        formData.append(\"email\", email);\n        formData.append(\"password\", password);\n        e.preventDefault();\n        await axios({\n            method: \"POST\",\n            url: `/login`,\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            data: formData,\n            withCredentials:true,\n        }).then(response => {\n            const status = response.data.responseStatus;\n            console.log(response);\n            if (status === \"LOGIN_FAIL\") {\n                setModalContent(\"존재하지 않는 회원입니다.\");\n                setModalShow(true);\n            }\n            if (status === \"LOGIN_SUCCESS\"){\n                setModalContent(\"로그인 성공\");\n                setModalShow(true);\n                dispatch(setToken(response.data));\n                localStorage.setItem(\"token\", JSON.stringify(response.data.data));\n                window.location.href = \"/main\";\n            }\n        })\n    };\n\n    return (\n        <div className=\"Auth-form-container\">\n\n            <Modal\n                size=\"sm\"\n                show={modalShow}\n                onHide={() => setModalShow(false)}\n                aria-labelledby=\"example-modal-sizes-title-sm\"\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title id=\"example-modal-sizes-title-sm\">\n                        알림\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>{modalContent}</Modal.Body>\n            </Modal>\n\n            <form className=\"Auth-form\" onSubmit={onSubmit}>\n                <div className=\"Auth-form-content\">\n                    <h3 className=\"Auth-form-title\">Sign In</h3>\n                    <div className=\"form-group mt-3\">\n                        <label>Email address</label>\n                        <input\n                            type=\"email\"\n                            className=\"form-control mt-1\"\n                            placeholder=\"Enter email\"\n                            onChange={onEmailChange}\n                        />\n                    </div>\n                    <div className=\"form-group mt-3\">\n                        <label>Password</label>\n                        <input\n                            type=\"password\"\n                            className=\"form-control mt-1\"\n                            placeholder=\"Enter password\"\n                            onChange={onPasswordChange}\n                        />\n                    </div>\n                    <div className=\"d-grid gap-2 mt-3\">\n                        <button type=\"submit\" className=\"btn btn-primary\">\n                            Submit\n                        </button>\n                    </div>\n                    <p className=\"join text-right mt-2\">\n                        <a href=\"/join\">Join</a>\n                    </p>\n                    <p className=\"forgot-password text-right mt-2\">\n                        Forgot <a href=\"#\">password?</a>\n                    </p>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default Login;","/Users/jeongseho/Documents/spring-react2/src/main/frontend/src/component/redux/Store.js",[],[],"/Users/jeongseho/Documents/spring-react2/src/main/frontend/src/component/login/TokenSlice.js",[],[],"/Users/jeongseho/Documents/spring-react2/src/main/frontend/src/component/join/Join.jsx",[],[],"/Users/jeongseho/Documents/spring-react2/src/main/frontend/src/component/main/Main.jsx",["74","75"],[],"/Users/jeongseho/Documents/spring-react2/src/main/frontend/src/component/main/list/List.jsx",["76","77","78","79","80","81"],[],"/Users/jeongseho/Documents/spring-react2/src/main/frontend/src/component/main/list/ListFragment.jsx",[],[],"/Users/jeongseho/Documents/spring-react2/src/main/frontend/src/component/main/list/MemberList.jsx",["82","83"],[],{"ruleId":"84","severity":1,"message":"85","line":5,"column":41,"nodeType":"86","messageId":"87","endLine":5,"endColumn":46},{"ruleId":"84","severity":1,"message":"88","line":5,"column":48,"nodeType":"86","messageId":"87","endLine":5,"endColumn":54},{"ruleId":"84","severity":1,"message":"89","line":7,"column":8,"nodeType":"86","messageId":"87","endLine":7,"endColumn":13},{"ruleId":"84","severity":1,"message":"90","line":2,"column":9,"nodeType":"86","messageId":"87","endLine":2,"endColumn":22},{"ruleId":"84","severity":1,"message":"91","line":2,"column":24,"nodeType":"86","messageId":"87","endLine":2,"endColumn":43},{"ruleId":"84","severity":1,"message":"92","line":2,"column":45,"nodeType":"86","messageId":"87","endLine":2,"endColumn":53},{"ruleId":"84","severity":1,"message":"93","line":3,"column":8,"nodeType":"86","messageId":"87","endLine":3,"endColumn":12},{"ruleId":"84","severity":1,"message":"94","line":10,"column":9,"nodeType":"86","messageId":"87","endLine":10,"endColumn":29},{"ruleId":"84","severity":1,"message":"95","line":16,"column":27,"nodeType":"86","messageId":"87","endLine":16,"endColumn":43},{"ruleId":"96","severity":1,"message":"97","line":43,"column":8,"nodeType":"98","endLine":43,"endColumn":23,"suggestions":"99"},{"ruleId":"84","severity":1,"message":"100","line":4,"column":22,"nodeType":"86","messageId":"87","endLine":4,"endColumn":29},{"ruleId":"84","severity":1,"message":"101","line":4,"column":31,"nodeType":"86","messageId":"87","endLine":4,"endColumn":42},{"ruleId":"102","severity":1,"message":"103","line":100,"column":32,"nodeType":"104","endLine":100,"endColumn":44},{"ruleId":"84","severity":1,"message":"105","line":9,"column":5,"nodeType":"86","messageId":"87","endLine":9,"endColumn":18},{"ruleId":"84","severity":1,"message":"106","line":10,"column":5,"nodeType":"86","messageId":"87","endLine":10,"endColumn":18},{"ruleId":"84","severity":1,"message":"107","line":5,"column":9,"nodeType":"86","messageId":"87","endLine":5,"endColumn":20},{"ruleId":"84","severity":1,"message":"108","line":5,"column":22,"nodeType":"86","messageId":"87","endLine":5,"endColumn":36},{"ruleId":"84","severity":1,"message":"109","line":5,"column":38,"nodeType":"86","messageId":"87","endLine":5,"endColumn":46},{"ruleId":"84","severity":1,"message":"110","line":12,"column":12,"nodeType":"86","messageId":"87","endLine":12,"endColumn":19},{"ruleId":"84","severity":1,"message":"111","line":12,"column":21,"nodeType":"86","messageId":"87","endLine":12,"endColumn":31},{"ruleId":"96","severity":1,"message":"112","line":49,"column":8,"nodeType":"98","endLine":49,"endColumn":10,"suggestions":"113"},{"ruleId":"84","severity":1,"message":"114","line":8,"column":11,"nodeType":"86","messageId":"87","endLine":8,"endColumn":19},{"ruleId":"96","severity":1,"message":"115","line":50,"column":8,"nodeType":"98","endLine":50,"endColumn":10,"suggestions":"116"},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Login' is defined but never used.","'BrowserRouter' is defined but never used.","'createBrowserRouter' is defined but never used.","'redirect' is defined but never used.","'Main' is defined but never used.","'createBrowserHistory' is defined but never used.","'setAuthenticated' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["117"],"'connect' is defined but never used.","'useSelector' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'MDBTypography' is defined but never used.","'MDBInputGroup' is defined but never used.","'ButtonGroup' is defined but never used.","'DropdownButton' is defined but never used.","'Dropdown' is defined but never used.","'members' is assigned a value but never used.","'setMembers' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadChatList'. Either include it or remove the dependency array.",["118"],"'formData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'members'. Either include it or remove the dependency array.",["119"],{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},"Update the dependencies array to be: [authenticated, navigate]",{"range":"126","text":"127"},"Update the dependencies array to be: [loadChatList]",{"range":"128","text":"129"},"Update the dependencies array to be: [members]",{"range":"130","text":"131"},[1419,1434],"[authenticated, navigate]",[1395,1397],"[loadChatList]",[1407,1409],"[members]"]